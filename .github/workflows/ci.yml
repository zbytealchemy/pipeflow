name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        service-group:
          - redis
          - kafka
          - sqs

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python environment
      uses: ./.github/actions/setup-python
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Setup test services
      uses: ./.github/actions/setup-services
      with:
        services: ${{ matrix.service-group }}
    
    - name: Run tests
      run: |
        poetry run pytest tests/plugins/${{ matrix.service-group }}/ --cov=pipeflow.plugins.${{ matrix.service-group }} --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
    
    - name: Cleanup services
      if: always()
      run: docker-compose -f .github/compose/kafka.yml down || true && docker rm -f redis localstack || true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python environment
      uses: ./.github/actions/setup-python
      with:
        python-version: "3.10"
    
    - name: Run black
      run: poetry run black . --check
    
    - name: Run isort
      run: poetry run isort . --check-only
    
    - name: Run flake8
      run: poetry run flake8 .
    
    - name: Run mypy
      run: poetry run mypy src/pipeflow

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.5.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install dependencies
      run: poetry install --no-interaction
    
    - name: Build documentation
      run: poetry run mkdocs build --strict
    
    - name: Deploy documentation
      if: github.ref == 'refs/heads/main'
      run: poetry run mkdocs gh-deploy --force
