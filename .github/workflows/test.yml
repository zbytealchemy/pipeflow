name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python environment
      uses: ./.github/actions/setup-python
      with:
        python-version: ${{ matrix.python-version }}
      
    - name: Run unit tests
      run: poetry run pytest tests/ -v -k "not integration"
        
    - name: Run mypy
      run: poetry run mypy src/pipeflow

  integration-test:
    needs: unit-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service-group:
          - redis
          - kafka
          - sqs
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python environment
      uses: ./.github/actions/setup-python
      with:
        python-version: "3.11"
    
    - name: Setup test services
      uses: ./.github/actions/setup-services
      with:
        services: ${{ matrix.service-group }}
    
    - name: Run integration tests
      run: poetry run pytest tests/plugins/${{ matrix.service-group }}/ -v
      
    - name: Cleanup services
      if: always()
      run: docker-compose -f .github/compose/kafka.yml down || true && docker rm -f redis localstack || true
